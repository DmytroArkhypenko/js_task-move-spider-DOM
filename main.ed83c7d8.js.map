{"version":3,"sources":["scripts/main.js"],"names":["walls","document","querySelectorAll","wallsList","i","wall","spider","querySelector","addEventListener","event","classList","contains","top","offsetY","height","left","offsetX","width","maxHeight","clientHeight","maxWidth","clientWidth","style","length"],"mappings":";AAAA,aAsCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhCD,IAJA,IAAMA,EAAQC,SAASC,iBAAiB,OAElCC,EAAgBH,EAAAA,GAEbI,EAAAA,SAAAA,GACDC,IAAAA,EAAOF,EAAUC,GACjBE,EAASH,EAAUC,GAAGG,cAAc,WAE1CF,EAAKG,iBAAiB,QAAS,SAAAC,GACzBJ,GAAAA,EAAKK,UAAUC,SAAS,QAAS,CAC/BC,IAAAA,EAAMH,EAAMI,QAAWP,EAAOQ,OAAS,EACvCC,EAAON,EAAMO,QAAWV,EAAOW,MAAQ,EAErCC,EAAYb,EAAKc,aAAeb,EAAOQ,OACvCM,EAAWf,EAAKgB,YAAcf,EAAOW,MAEvCL,EAAM,IACRA,EAAM,GAGJA,EAAMM,IACRN,EAAMM,GAGJH,EAAO,IACTA,EAAO,GAGLA,EAAOK,IACTL,EAAOK,GAGTd,EAAOgB,MAAMV,IAASA,GAAAA,OAAAA,EAAtB,MACAN,EAAOgB,MAAMP,KAAUA,GAAAA,OAAAA,EAAvB,UA7BGX,EAAI,EAAGA,EAAID,EAAUoB,OAAQnB,IAA7BA,EAAAA","file":"main.ed83c7d8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst walls = document.querySelectorAll('div');\r\n\r\nconst wallsList = [...walls];\r\n\r\nfor (let i = 0; i < wallsList.length; i++) {\r\n  const wall = wallsList[i];\r\n  const spider = wallsList[i].querySelector('.spider');\r\n\r\n  wall.addEventListener('click', event => {\r\n    if (wall.classList.contains('wall')) {\r\n      let top = event.offsetY - (spider.height / 2);\r\n      let left = event.offsetX - (spider.width / 2);\r\n\r\n      const maxHeight = wall.clientHeight - spider.height;\r\n      const maxWidth = wall.clientWidth - spider.width;\r\n\r\n      if (top < 0) {\r\n        top = 0;\r\n      }\r\n\r\n      if (top > maxHeight) {\r\n        top = maxHeight;\r\n      }\r\n\r\n      if (left < 0) {\r\n        left = 0;\r\n      }\r\n\r\n      if (left > maxWidth) {\r\n        left = maxWidth;\r\n      }\r\n\r\n      spider.style.top = `${top}px`;\r\n      spider.style.left = `${left}px`;\r\n    }\r\n  });\r\n}\r\n"]}